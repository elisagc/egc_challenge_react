{"version":3,"sources":["assets/images/imagen1.jpg","assets/images/imagen2.jpg","assets/images/imagen3.jpg","assets/images/imagen4.jpg","assets/images/imagen5.jpg","assets/images/imagen6.jpg","components/Slider.js","assets/data/dataImages.js","components/Ficha.js","components/Post.js","assets/data/dataPosts.js","containers/Home.js","App.js","serviceWorker.js","index.js","assets/images/slider_principal.jpg"],"names":["module","exports","Slider","autoPlay","showThumbs","swipeable","emulateTouch","className","alt","src","imgSlider","dataImages","id","img","img1","es","title","description","en","img2","img3","img4","img5","img6","Ficha","props","useState","lang","setLang","useEffect","match","map","data","key","toUpperCase","Post","postData","setPostData","Promise","resolve","reject","setTimeout","dataJson","then","posts","post","href","url","_id","image","banner_image_id_url","Home","console","log","location","search","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.88122625.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imagen1.4829f912.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imagen2.e7c0eced.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imagen3.63b11c4c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imagen4.5273d30d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imagen5.9ef36ac3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imagen6.e11aa483.jpg\";","import React from 'react'\n\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport imgSlider from '../assets/images/slider_principal.jpg'\n\nconst Slider = () => {\n  return (\n    <Carousel\n      autoPlay\n      showThumbs={false}\n      swipeable={true}\n      emulateTouch={true}\n      className=\"carousel\"\n    >\n      <div>\n        <img alt=\"\" src={imgSlider} />\n      </div>\n      <div>\n        <img alt=\"\" src={imgSlider} />\n      </div>\n      <div>\n        <img alt=\"\" src={imgSlider} />\n      </div>\n    </Carousel>\n  )\n}\n\nexport default Slider\n","import img1 from '../images/imagen1.jpg'\nimport img2 from '../images/imagen2.jpg'\nimport img3 from '../images/imagen3.jpg'\nimport img4 from '../images/imagen4.jpg'\nimport img5 from '../images/imagen5.jpg'\nimport img6 from '../images/imagen6.jpg'\n\nexport const dataImages = [\n  {\n    id: 1,\n    img: img1,\n    es: {\n      title: 'Título 1',\n      description: 'Subtítulo',\n    },\n    en: {\n      title: 'Title 1',\n      description: 'Subtitle',\n    },\n  },\n  {\n    id: 2,\n    img: img2,\n    es: {\n      title: 'Título 2',\n      description: 'Subtítulo',\n    },\n    en: {\n      title: 'Title 2',\n      description: 'Subtitle',\n    },\n  },\n  {\n    id: 3,\n    img: img3,\n    es: {\n      title: 'Título 3',\n      description: 'Subtítulo',\n    },\n    en: {\n      title: 'Title 3',\n      description: 'Subtitle',\n    },\n  },\n  {\n    id: 4,\n    img: img4,\n    es: {\n      title: 'Título 4',\n      description: 'Subtítulo',\n    },\n    en: {\n      title: 'Title 4',\n      description: 'Subtitle',\n    },\n  },\n  {\n    id: 5,\n    img: img5,\n    es: {\n      title: 'Título 5',\n      description: 'Subtítulo',\n    },\n    en: {\n      title: 'Title 5',\n      description: 'Subtitle',\n    },\n  },\n  {\n    id: 6,\n    img: img6,\n    es: {\n      title: 'Título 6',\n      description: 'Subtítulo',\n    },\n    en: {\n      title: 'Title 6',\n      description: 'Subtitle',\n    },\n  },\n]\n","import React, { useEffect, useState } from 'react'\nimport { dataImages } from '../assets/data/dataImages'\n\nconst Ficha = (props) => {\n  const [lang, setLang] = useState('es')\n\n  useEffect(() => {\n    if (props.lang.match(/e./g)) {\n      let [lang] = props.lang.match(/e./g)\n      setLang(lang)\n    } else {\n      setLang('es')\n    }\n  }, [props])\n\n  return (\n    <div className=\"img-container\">\n      {dataImages.map((data) => (\n        <div className={`item item-${data.id}`} key={data.id}>\n          <img src={data.img} alt=\"\" />\n\n          {\n            <div className=\"info\">\n              {lang === 'es' ? (\n                <>\n                  <h1>{data.es.title.toUpperCase()}</h1>\n                  <p>{data.es.description.toUpperCase()}</p>\n                </>\n              ) : (\n                <>\n                  <h1>{data.en.title.toUpperCase()}</h1>\n                  <p>{data.en.description.toUpperCase()}</p>\n                </>\n              )}\n            </div>\n          }\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default Ficha\n","import { fetchData } from '../assets/data/dataPosts'\nimport React, { useEffect, useState } from 'react'\n\nconst Post = () => {\n  const [postData, setPostData] = useState()\n\n  useEffect(() => {\n    fetchData().then((data) => setPostData(data))\n  })\n\n  const data = () => {\n    return postData.posts.map((post) => (\n      <a href={post.url} className=\"item\" key={post._id}>\n        <div className=\"item-img\">\n          <img src={post.image || post.banner_image_id_url} alt=\"\" />\n        </div>\n\n        <div className=\"item-info\">\n          <h2>{post.title}</h2>\n          <p>{post.description}</p>\n        </div>\n      </a>\n    ))\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">NUESTROS POSTS</h1>\n      <div className=\"posts-container\">{postData ? data() : null}</div>\n    </>\n  )\n}\n\nexport default Post\n","import dataJson from './data.json'\n\nexport const fetchData = () => {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(dataJson)\n    }, 1000)\n  })\n  return promise\n}\n","import React from 'react'\nimport Slider from '../components/Slider'\nimport Ficha from '../components/Ficha'\nimport Post from '../components/Post'\n\nconst Home = (props) => {\n  console.log(props)\n  return (\n    <div className=\"main-container\">\n      <Slider />\n      <Ficha lang={props.location.search} />\n      <Post></Post>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\nimport './sass/main.scss'\nimport Home from './containers/Home'\nimport { Route, Switch } from 'react-router-dom'\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/slider_principal.55f8a91d.jpg\";"],"sourceRoot":""}